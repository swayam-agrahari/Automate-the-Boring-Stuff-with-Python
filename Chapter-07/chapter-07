1. What is the function that creates Regex objects?
 The re.compile() function returns Regex objects.

2. Why are raw strings often used when creating Regex objects?
--> To escape '\'

3. What does the search() method return?
-> It returns Match objects.

4. How do you get the actual strings that match the pattern from a Match object?
--> Using group() method 

5. In the regex created from r'(\d\d\d)-(\d\d\d-\d\d\d\d)', what does group 0 cover? Group 1? Group 2?
--> 	Group 0 --> entire match
	Group 1 --> matches first set of parentheses
	Group 2 --> matches second set of parentheses.

6. Parentheses and periods have specific meanings in regular expression syntax. How would you specify that you want a regex to match actual parentheses and period characters?
--> Periods and parentheses can be escaped with a backslash: \., \(, and \).

7. The findall() method returns a list of strings or a list of tuples of strings. What makes it return one or the other?
--> If the regex has no groups, a list of strings is returned. If the regex has groups, a list of tuples of strings is returned.

8. What does the | character signify in regular expressions?
--> The | (pipe) character signifies matching “either, or” between two groups.

9. What two things does the ? character signify in regular expressions?
--> The ? character means “match zero or one of the preceding group” i.e ( non-greedy matching)

10. What is the difference between the + and * characters in regular expressions?
--> The + matches one or more whereas the * matches zero or more.

11. What is the difference between {3} and {3,5} in regular expressions?
--> The {3} matches exactly three instances of the preceding group whereas {3,5} matches between three 	and five instances.

12. What do the \d, \w, and \s shorthand character classes signify in regular expressions?
--> The \d, \w, and \s used to match a single digit, word, or space character, respectively.

13. What do the \D, \W, and \S shorthand character classes signify in regular expressions?
--> The \D, \W, and \S  used to match a single character that is not a digit, word, or space character, respectively.

14. What is the difference between .* and .*??
--> The .* performs a greedy match, and the .*? performs a non-greedy match.

15. What is the character class syntax to match all numbers and lowercase letters?
--> Either [0-9a-z] or [a-z0-9]

16. How do you make a regular expression case-insensitive?
--> Passing re.I or re.IGNORECASE as the second argument to re.compile() 

17. What does the . character normally match? What does it match if re.DOTALL is passed as the second argument to re.compile()?
--> The . character normally matches any character except the newline character. If re.DOTALL is passed as the second argument to re.compile(), then the dot will also match newline characters.

18. If numRegex = re.compile(r'\d+'), what will numRegex.sub('X', '12 drummers, 11 pipers, five rings, 3 hens') return?
--> The sub() call will return the string 'X drummers, X pipers, five rings, X hens'.

19. What does passing re.VERBOSE as the second argument to re.compile() allow you to do?
--> The re.VERBOSE argument allows you to add whitespace and comments to the string passed to re.compile().

20. How would you write a regex that matches a number with commas for every three digits? It must match the following:

'42'
'1,234'
'6,368,745'
but not the following:
'12,34,567' (which has only two digits between the commas)
'1234' (which lacks commas)
-->re.compile(r'^\d{1,3}(,\d{3})*$')


21. re.compile(r'[A-Z][a-z]*\sWatanabe')

22. re.compile(r'(Alice|Bob|Carol)\s(eats|pets|throws)\s(apples|cats|baseballs)\.', re.IGNORECASE)
